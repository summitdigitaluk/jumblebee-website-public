{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/utils/helper-functions.js", "../src/index.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "export const scrollIntoViewDoThis = (ele, callback, config) => {\n    let _config = config ? config : {\n        rootMargin: '0px 0px 0px 0px',\n        threshold: 0,\n    };\n    // Check if Intersection Observer is supported by the browser\n    if ('IntersectionObserver' in window) {\n        const observer = new IntersectionObserver((entries) => {\n            entries.forEach((entry) => {\n                // If the observed element enters the viewport\n                if (entry.isIntersecting) {\n                    if (typeof callback === 'function') {\n                        callback(entry.target);\n                    }\n\n                    // Stop observing once loaded to prevent unnecessary calls\n                    observer.unobserve(entry.target);\n                }\n            });\n        }, _config);\n\n        const elementsToObserve = document.querySelectorAll(ele);\n\n        if (elementsToObserve.length > 0) {\n            [...elementsToObserve].forEach((element) => {\n                observer.observe(element);\n            });\n        }\n    }\n};\n\nexport const lazyLoadLottie = (ele, classToAddWhenLoaded) => {\n    const lottieToLoad = $($(ele).find('template').eq(0).html());\n    $(ele).append(lottieToLoad);\n    Webflow.require('lottie').init();\n    //console.log(Webflow.require('lottie').lottie.getRegisteredAnimations());\n    const loadedClass = classToAddWhenLoaded ? classToAddWhenLoaded : 'lottie-loaded';\n    $(lottieToLoad).addClass(loadedClass);\n    // document.addEventListener('DOMContentLoaded', function () {\n    //     var animationContainer = document.querySelector('#my-lottie-animation');\n    //     var animationData = JSON.parse(animationContainer.getAttribute('data-animation-data'));\n\n    //     var anim = lottie.loadAnimation({\n    //         container: animationContainer,\n    //         renderer: 'svg',\n    //         loop: true,\n    //         autoplay: true,\n    //         animationData: animationData,\n    //     });\n\n    //     anim.addEventListener('DOMLoaded', function () {\n    //         // Lottie animation has been added to the DOM but hasn't started loading yet\n    //         // You can show your preloader here\n    //     });\n\n    //     anim.addEventListener('complete', function () {\n    //         // Lottie animation has finished loading and is ready to be displayed\n    //         // You can hide your preloader here\n    //     });\n    // });\n};\n\nexport const isAnObject = (obj) => {\n    if (typeof obj === 'object' && !Array.isArray(obj) && obj !== null) return true;\n    return false;\n};\n\nexport const loadExternalJSON = (url) => {\n    return new Promise((resolve, reject) => {\n        // Check if script already exists in DOM\n        const resourceExists = document.querySelector(`link[href=\"${url}\"]`);\n\n        if (resourceExists) {\n            resolve(); // Resource already loaded\n            return;\n        }\n\n        fetch(url)\n            .then((response) => response.json())\n            .then((data) => {\n                resolve(data); // Passes parsed JSON data as argument\n            })\n            .catch((error) => reject(new Error(`Error loading ${url}: ${error.message}`)));\n    });\n};\n", "import {\n    isAnObject,\n    lazyLoadLottie,\n    loadExternalJSON,\n    scrollIntoViewDoThis,\n} from '$utils/helper-functions';\n\nconst getStats = () => {\n    const animateStats = (data) => {\n        console.log(data);\n        document.getElementById('stats-bids-made').innerHTML = Math.floor(\n            Number(data.total_bids_made)\n        ).toLocaleString('en-US');\n        document.getElementById('stats-raised-to-date').innerHTML =\n            '\u00A3' + Math.floor(data.total_fund_raised).toLocaleString('en-US');\n        //document.getElementById('stats-auction-count').innerHTML = data.auction_count;\n        document.getElementById('stats-tickets-sold').innerHTML = Math.floor(\n            Number(data.tickets_sold)\n        ).toLocaleString('en-US');\n\n        const counters = document.querySelectorAll('.stats_value');\n\n        counters.forEach((stat) => {\n            // pattern used to seperate input number from html into an array of numbers and non numbers. EX $65.3M -> [\"$65.3M\", \"$\", \"65\", \".\", \"3\", \"M\"]\n            //const patt = /(\\D+)?(\\d+)(\\D+)?(\\d+)?(\\D+)?/;\n            const patt = /(\\D+)?(\\d+)(\\D+)?(\\d+)(\\D+)?(\\d+)(\\D+)?(\\d+)?(\\D+)?/;\n            const time = 1000;\n            let result = [...patt.exec(stat.textContent)];\n            let fresh = true;\n            let ticks;\n\n            // Remove first full match from result array (we dont need the full match, just the individual match groups).\n            result.shift();\n            // Remove undefined values from result array where they didnt have a match in one of the optional regex groups\n            result = result.filter((res) => res != null);\n\n            while (stat.firstChild) {\n                stat.removeChild(stat.firstChild);\n            }\n\n            for (let res of result) {\n                if (isNaN(res)) {\n                    stat.insertAdjacentHTML('beforeend', `<span>${res}</span>`);\n                } else {\n                    for (let i = 0; i < res.length; i++) {\n                        stat.insertAdjacentHTML(\n                            'beforeend',\n                            `<span data-value=\"${res[i]}\">\n                    <span>&ndash;</span>\n                    ${Array(parseInt(res[i]) + 1)\n                                .join(0)\n                                .split(0)\n                                .map(\n                                    (x, j) => `\n                      <span>${j}</span>\n                    `\n                                )\n                                .join('')}\n                  </span>`\n                        );\n                    }\n                }\n            }\n\n            ticks = [...stat.querySelectorAll('span[data-value]')];\n            let activate = () => {\n                let { top } = stat.getBoundingClientRect();\n                let offset = window.innerHeight * 0.8;\n\n                setTimeout(() => {\n                    fresh = false;\n                }, time);\n\n                if (top < offset) {\n                    setTimeout(\n                        () => {\n                            for (let tick of ticks) {\n                                let dist = parseInt(tick.getAttribute('data-value')) + 1;\n                                tick.style.transform = `translateY(-${dist * 100}%)`;\n                            }\n                        },\n                        fresh ? time : 0\n                    );\n                    window.removeEventListener('scroll', activate);\n                }\n            };\n            window.addEventListener('scroll', activate);\n            activate();\n        });\n    };\n\n    let stats;\n    if (\n        localStorage.getItem('stats') && //Exists in localStorage\n        typeof localStorage.getItem('stats') !== 'undefined' && //Is not undefined\n        isAnObject(JSON.parse(localStorage.getItem('stats'))) === true && //parsed string is formatted as an object\n        Date.now() - new Date(JSON.parse(localStorage.getItem('stats')).lastUpdated).getTime() <\n        24 * 60 * 60 * 1000 //The data is less than 24 hours old\n    ) {\n        stats = JSON.parse(localStorage.getItem('stats'));\n        console.log('stats from local', stats);\n        animateStats(stats);\n    } else {\n        // console.log(localStorage.getItem('stats'));\n        // console.log(typeof localStorage.getItem('stats'));\n        // console.log(isAnObject(JSON.parse(localStorage.getItem('stats'))));\n        // console.log(\n        //     Date.now() -\n        //         new Date(Number(JSON.parse(localStorage.getItem('stats')).lastUpdated)).getTime()\n        // );\n        // console.log(24 * 60 * 60 * 1000);\n        //The data is more than 24 hours old. Download new data\n        loadExternalJSON(\n            'https://www.jumblebee.co.uk/api/auctionStats_rpvTfjHnFNF2rbWxb1jaZCAj8GGT21Nl'\n        )\n            .then((jsonData) => {\n                stats = jsonData; // Accessing the parsed JSON\n                console.log('stats from jumblebee', stats);\n                //Update with new timestamp in localStorage\n                stats.lastUpdated = Date.now();\n                localStorage.setItem('stats', JSON.stringify(stats));\n\n                animateStats(stats);\n            })\n            .catch((error) => {\n                console.error(error);\n                // Handle error if failed to load or download any of the external resources.\n            });\n    }\n};\n\n/* Static stats for testing */\n/*const staticStats = {\n  total_bids_made: '1191110',\n  auction_count: '8022',\n  total_fund_raised: '451376058.77',\n  tickets_sold: '924950',\n  lastUpdated: Date.now(),\n};\nlocalStorage.setItem('stats', JSON.stringify(staticStats));*/\n\nwindow.Webflow ||= [];\nwindow.Webflow.push(() => {\n    scrollIntoViewDoThis('[s-lazy-load=\"lottie\"]', lazyLoadLottie);\n    scrollIntoViewDoThis('#stats', getStats,\n        {\n            rootMargin: '-250% 0px 0px 0px',\n            threshold: 0,\n        }\n    );\n});\n"],
  "mappings": "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",
  "names": []
}
